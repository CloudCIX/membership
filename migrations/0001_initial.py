# Generated by Django 2.0.7 on 2018-08-23 12:52
from typing import List
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies: List[str] = []

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('address1', models.CharField(max_length=100)),
                ('address2', models.CharField(default='', max_length=100)),
                ('address3', models.CharField(default='', max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('email', models.CharField(default='', max_length=255)),
                ('gln', models.CharField(max_length=13, null=True)),
                ('name', models.CharField(max_length=250)),
                ('phones', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('postcode', models.CharField(default='', max_length=20)),
                ('vat_number', models.CharField(default='', max_length=20)),
                ('website', models.CharField(default='', max_length=50)),
                ('billing_address', models.ForeignKey(
                    null=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    to='membership.Address',
                )),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='AddressLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('note', models.TextField(null=True)),
                ('reference', models.CharField(default='', max_length=20)),
                ('address', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='address_contra_link',
                    to='membership.Address',
                )),
                ('contra_address', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='address_link',
                    to='membership.Address',
                )),
            ],
            options={
                'db_table': 'address_link',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alpha_2_code', models.CharField(max_length=2)),
                ('alpha_3_code', models.CharField(max_length=3)),
                ('english_name', models.CharField(max_length=50)),
                ('phone_prefix', models.IntegerField(null=True)),
                ('primary_level_name', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('name', models.CharField(max_length=25)),
                ('symbol', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'currency',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('code', models.CharField(max_length=6)),
                ('english_name', models.CharField(max_length=25)),
                ('native_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'language',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('gln_prefix', models.CharField(max_length=12, null=True)),
                ('name', models.CharField(max_length=250)),
                ('os_id', models.CharField(blank=True, max_length=64)),
                ('self_managed', models.BooleanField(default=False)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Currency')),
            ],
            options={
                'db_table': 'member',
            },
        ),
        migrations.CreateModel(
            name='MemberLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('contra_member', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='contra_member',
                    to='membership.Member',
                )),
                ('member', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='member',
                    to='membership.Member',
                )),
            ],
            options={
                'db_table': 'member_link',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'notifications',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('name', models.CharField(max_length=50)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Member')),
            ],
            options={
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='Subdivision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('alpha_code', models.CharField(max_length=5, null=True)),
                ('english_name', models.CharField(max_length=50, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Country')),
            ],
            options={
                'db_table': 'subdivision',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('name', models.CharField(max_length=50)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Member')),
            ],
            options={
                'db_table': 'team',
            },
        ),
        migrations.CreateModel(
            name='TeamUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Team')),
            ],
            options={
                'db_table': 'team_user',
            },
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('name', models.CharField(max_length=50)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Member')),
            ],
            options={
                'db_table': 'territory',
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('documentation', models.TextField(default='Insert documentation here')),
                ('name', models.TextField(null=True)),
                ('ss_active', models.BooleanField(default=False)),
                ('xslt', models.TextField(default='Insert XSLT here')),
                ('xslt_fo', models.TextField(default='Insert XSLT-FO here')),
            ],
            options={
                'db_table': 'transaction_type',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('administrator', models.BooleanField(default=False)),
                ('email', models.CharField(max_length=255)),
                ('expiry_date', models.DateTimeField()),
                ('first_name', models.CharField(max_length=50)),
                ('global_active', models.BooleanField(default=False)),
                ('global_user', models.BooleanField(default=False)),
                ('image', models.URLField(null=True)),
                ('job_title', models.CharField(default='', max_length=100)),
                ('last_login', models.DateTimeField(null=True)),
                ('os_id', models.CharField(default='', max_length=64)),
                ('phones', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('signature', models.TextField(default='')),
                ('start_date', models.DateTimeField()),
                ('surname', models.CharField(max_length=50)),
                ('timezone', models.CharField(max_length=50)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Address')),
                ('department', models.ForeignKey(
                    null=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    to='membership.Department',
                )),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Language')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Member')),
                ('notifications', models.ManyToManyField(
                    related_name='users',
                    through='membership.Notification',
                    to='membership.TransactionType',
                )),
                ('profile', models.ForeignKey(
                    null=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    to='membership.Profile',
                )),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.AddField(
            model_name='teamuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.User'),
        ),
        migrations.AddField(
            model_name='team',
            name='users',
            field=models.ManyToManyField(related_name='teams', through='membership.TeamUser', to='membership.User'),
        ),
        migrations.AddField(
            model_name='notification',
            name='transaction_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.TransactionType'),
        ),
        migrations.AddField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.User'),
        ),
        migrations.AddField(
            model_name='department',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Member'),
        ),
        migrations.AddField(
            model_name='addresslink',
            name='territory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='membership.Territory'),
        ),
        migrations.AddField(
            model_name='address',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Country'),
        ),
        migrations.AddField(
            model_name='address',
            name='currency',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='membership.Currency'),
        ),
        migrations.AddField(
            model_name='address',
            name='language',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='membership.Language'),
        ),
        migrations.AddField(
            model_name='address',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Member'),
        ),
        migrations.AddField(
            model_name='address',
            name='subdivision',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='membership.Subdivision',
            ),
        ),
        migrations.AlterUniqueTogether(
            name='teamuser',
            unique_together={('user', 'team')},
        ),
        migrations.AlterUniqueTogether(
            name='notification',
            unique_together={('user', 'transaction_type')},
        ),
    ]
